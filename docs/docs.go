// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/businesses": {
            "post": {
                "description": "Add new business to database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "businesses"
                ],
                "summary": "Create business",
                "parameters": [
                    {
                        "description": "data required to create a new business",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BusinessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.createBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CreateBusinessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/businesses/search": {
            "get": {
                "description": "Search for businesses by provided parameters",
                "tags": [
                    "businesses"
                ],
                "summary": "Search businesses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "business location (ex:jakarta/roma/new york/etc)",
                        "name": "location",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "business categories. can be multiple. comma separated (ex:italian,japanese,etc)",
                        "name": "categories",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "business transaction type. can be multiple. comma separated (ex:delivery,pickup,etc)",
                        "name": "transactions",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is the business open right now. open_now and open_at can't be used together",
                        "name": "open_now",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 5,
                        "description": "number of business(es) to display per page",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "page number you want to see",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maxLength": 4,
                        "minLength": 4,
                        "type": "string",
                        "description": "will businesses open at given time. format: 24h, between 0000 to 2359. open_now and open_at can't be used together",
                        "name": "open_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusinessesResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.BusinessResponse"
                                            }
                                        },
                                        "metadata": {
                                            "$ref": "#/definitions/dto.Metadata"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusinessesResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusinessesResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/businesses/{business_id_or_alias}": {
            "get": {
                "description": "Get a single business by ID or alias",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "businesses"
                ],
                "summary": "Get business",
                "parameters": [
                    {
                        "type": "string",
                        "description": "business ID or alias",
                        "name": "business_id_or_alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.BusinessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update business data by ID or alias",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "businesses"
                ],
                "summary": "Update business",
                "parameters": [
                    {
                        "type": "string",
                        "description": "business ID or alias",
                        "name": "business_id_or_alias",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data required to update business data",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BusinessRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single business by ID or alias",
                "tags": [
                    "businesses"
                ],
                "summary": "Delete business",
                "parameters": [
                    {
                        "type": "string",
                        "description": "business ID or alias",
                        "name": "business_id_or_alias",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getBusiness"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "List all available categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "List categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getAllCategoryResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Category"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getAllCategoryResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "List all available categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "List categories",
                "parameters": [
                    {
                        "description": "data required to create new category",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getAllCategoryResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Category"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getAllCategoryResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "description": "List all supported transaction types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getAllTransactionResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Transaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.getAllTransactionResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BusinessRequest": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string",
                    "example": "53rd John Doe Street"
                },
                "address2": {
                    "type": "string",
                    "example": "Johnnyslvania"
                },
                "address3": {
                    "type": "string",
                    "example": ""
                },
                "categories": {
                    "description": "comma separated ex: (japanese,venues,etc). to make it empty, just do \"\"",
                    "type": "string",
                    "example": "venues,adult,antiques"
                },
                "city": {
                    "type": "string",
                    "example": "Lincoln"
                },
                "close_at": {
                    "type": "string",
                    "example": "2100"
                },
                "country": {
                    "type": "string",
                    "example": "US"
                },
                "image_url": {
                    "type": "string",
                    "example": "https://john.doe/image.png"
                },
                "latitude": {
                    "type": "number",
                    "example": 37.234332396
                },
                "longitude": {
                    "type": "number",
                    "example": -115.80666344
                },
                "name": {
                    "type": "string",
                    "example": "John Doe John Store"
                },
                "open_at": {
                    "type": "string",
                    "example": "1100"
                },
                "phone": {
                    "type": "string",
                    "example": "+1938485823"
                },
                "price": {
                    "type": "string",
                    "example": "$$$$"
                },
                "state": {
                    "type": "string",
                    "example": "Nebraska"
                },
                "transactions": {
                    "description": "comma separated ex: (pickup,delivery,etc). to make it empty, just do \"\"",
                    "type": "string",
                    "example": "pickup,delivery"
                },
                "zip_code": {
                    "type": "integer",
                    "example": 68501
                }
            }
        },
        "dto.BusinessResponse": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Category"
                    }
                },
                "close_at": {
                    "type": "string"
                },
                "coordinates": {
                    "$ref": "#/definitions/dto.Coordinates"
                },
                "id": {
                    "type": "string"
                },
                "imageURL": {
                    "type": "string"
                },
                "is_open": {
                    "type": "boolean"
                },
                "location": {
                    "$ref": "#/definitions/dto.Location"
                },
                "name": {
                    "type": "string"
                },
                "open_at": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.Category": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.Coordinates": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "dto.CreateBusinessResponse": {
            "type": "object",
            "properties": {
                "business_alias": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.Location": {
            "type": "object",
            "properties": {
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "address3": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "display_address": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "dto.Metadata": {
            "type": "object",
            "properties": {
                "current_time": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.Transaction": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "handler.createBusiness": {
            "type": "object"
        },
        "handler.getAllCategoryResponse": {
            "type": "object"
        },
        "handler.getAllTransactionResponse": {
            "type": "object"
        },
        "handler.getBusiness": {
            "type": "object"
        },
        "handler.getBusinessesResponse": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "62-Teknologi Back-end Test",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
